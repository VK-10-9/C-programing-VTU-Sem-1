#include <stdio.h>

// Function to find the length of a string
int string_length(const char str[]) {
    int length = 0;
    while (str[length]) length++;
    return length;
}

// Function to compare two strings
int string_compare(const char str1[], const char str2[]) {
    while (*str1 && (*str1 == *str2)) {
        str1++;
        str2++;
    }
    return *str1 - *str2;
}

// Function to concatenate two strings
void string_concatenate(char result[], const char str1[], const char str2[]) {
    while (*str1) *result++ = *str1++;
    while (*str2) *result++ = *str2++;
    *result = '\0'; // Null-terminate the result
}

int main() {
    char str1[100], str2[100], concatenated[200];

    // Get input from the user
    printf("Enter the first string: ");
    fgets(str1, sizeof(str1), stdin);
    printf("Enter the second string: ");
    fgets(str2, sizeof(str2), stdin);

    // Remove newline characters from fgets input
    str1[string_length(str1) - 1] = '\0';
    str2[string_length(str2) - 1] = '\0';

    // Display string lengths
    printf("Length of first string: %d\n", string_length(str1));
    printf("Length of second string: %d\n", string_length(str2));

    // Compare strings
    int cmp = string_compare(str1, str2);
    if (cmp == 0) {
        printf("The strings are equal.\n");
    } else if (cmp < 0) {
        printf("The first string is less than the second string.\n");
    } else {
        printf("The first string is greater than the second string.\n");
    }

    // Concatenate strings
    string_concatenate(concatenated, str1, str2);
    printf("Concatenated string: %s\n", concatenated);

    return 0;
}
